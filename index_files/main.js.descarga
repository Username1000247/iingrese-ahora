$(function () {
    'use strict';

    // quickview slider initiation
    $('#quickview-modal').on('shown.bs.modal', function (e) {
        $('.qv-large-slider').slick('setPosition');
        $('.qv-thumb-slider').slick('setPosition');
    });

    // common slider
    $('.common-slider').each(function () {
        var $this = $(this);
        var verticalSlide = $(this).attr('data-vertical-slider');

        if ($this.children().length > 1) {
          var selectorAppendDots = $this.parent().find('.activate-dots');
          var selectorAppendArrows = $this.parent().find('.activate-arrows');
          var selectorPrevArrow = `<span class="arrow-slider arrow-prev"><svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" class="icon-arrow-left"><polyline points="15 18 9 12 15 6"></polyline></svg></span>`;
          var selectorNextArrow = `<span class="arrow-slider arrow-next"><svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" class="icon-arrow-right"><polyline points="9 18 15 12 9 6"></polyline></svg></span>`;
          //var selectorPrevArrow = `<span class="arrow-slider arrow-prev"><svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#FEFEFE" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" class="icon-arrow-left"><polyline points="15 18 9 12 15 6"></polyline></svg></span>`;
          //var selectorNextArrow = `<span class="arrow-slider arrow-next"><svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#FEFEFE" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" class="icon-arrow-right"><polyline points="9 18 15 12 9 6"></polyline></svg></span>`;

          $($this).slick({
            infinite: false,
            speed: 500,
            cssEase: 'ease',
            swipeToSlide: true,        
            vertical: verticalSlide ? true : false,
            verticalSwiping: verticalSlide ? true : false,
            appendDots: selectorAppendDots,
            appendArrows: selectorAppendArrows,
            prevArrow: selectorPrevArrow,
            nextArrow: selectorNextArrow,
            responsive: [
                {
                    breakpoint: 768,
                    settings: {
                        vertical: false,
                        verticalSwiping: false,
                    }
                }
            ]
          });
        }
    });

    

    // slideshow
    $('.activate-slider').each(function () {
        var $this = $(this);
        if ($this.children().length > 1) {
            var selectorAppendDots = $this.parent().find('.activate-dots');
            var selectorAppendArrows = $this.parent().find('.activate-arrows');
            var selectorPrevArrow = `<span class="arrow-slider arrow-prev"><svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" class="icon-arrow-left"><polyline points="15 18 9 12 15 6"></polyline></svg></span>`;
            var selectorNextArrow = `<span class="arrow-slider arrow-next"><svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" class="icon-arrow-right"><polyline points="9 18 15 12 9 6"></polyline></svg></span>`;

            function doAnimation() {
                $this.find('.slick-slide').each(function () {
                    $(this).find('[data-animation]').each(function () {
                        var dataAnimation = $(this).attr('data-animation');
                        $(this).removeClass(dataAnimation);
                        if ($(this).closest('.slick-slide').is('.slick-current.slick-active')) {
                            $(this).addClass(dataAnimation);
                        }
                    })
                })
                return false;
            }

            $(this).on('init', function (event, slick) {
                doAnimation();
            }).on('afterChange', function (event, slick, direction) {
                doAnimation();
            }).slick({
                appendDots: selectorAppendDots,
                appendArrows: selectorAppendArrows,
                prevArrow: selectorPrevArrow,
                nextArrow: selectorNextArrow
            });
        }
    })
        
    // drawer menu
    $('.open-submenu').on('click', function () {
        $(this).parent().siblings('.submenu-transform').addClass('active');
    });

    $('.btn-menu-back').on('click', function () {
        $(this).closest('.submenu-transform').removeClass('active');
    });

    // header search
    $('.icon-search, .search-close').on('click', function () {
        $('.search-wrapper').toggleClass('search-appear');
    });

    // increament-decreament button
    $(".qty-btn").on('click', function () {
        var qtyInput = $(this).parent().find('input');
        if ($(this).hasClass('inc-qty')) {
          qtyInput.val(parseInt(qtyInput.val()) + 1);
        } else if (qtyInput.val() >= 1) {
          qtyInput.val(parseInt(qtyInput.val()) - 1);
        }
    });

    // footer copyright current date
    $('.current-year').text(new Date().getFullYear());

    // toggle footer menu
    $('.footer-heading').on('click', function () {
        $(this).siblings().slideToggle();
    });

    // toggle & accordion 
    $('.accordion-btn').on('click', function () {
        $(this).siblings('.accordion-child').slideToggle();
        $(this).toggleClass('active');
    });
      $('.write-btn').on('click', function () {
        $(this).closest('.accordion-parent').find('.accordion-child').slideToggle();
    });

    // filter drawer open
    $('.filter-drawer-trigger').on('click', function () {
        $('.filter-drawer').toggleClass('active');
    });

    // product img popup
    $('[data-fancybox="gallery"]').fancybox({
        buttons: [
          "slideShow",
          "thumbs",
          "zoom",
          "fullScreen",
          "share",
          "close"
        ],
        loop: false,
        protect: true
    });

    /* --------------------------------------------------------
    scrollUp active
    -------------------------------------------------------- */
    var scrollUpBtn = $('#scrollup');
    $(window).scroll(function() {
        if ($(window).scrollTop() > 700) {
            scrollUpBtn.addClass('show');
        } else {
            scrollUpBtn.removeClass('show');
        }
    });

    scrollUpBtn.on('click', function(e) {
        e.preventDefault();
        $('html, body').animate({scrollTop:0}, 300);
    });
})

const options2 = { style: 'currency', currency: 'MXN', currencyDisplay: 'narrowSymbol' };
const numberFormat2 = new Intl.NumberFormat('es-MX', options2);

function reactivaSliders () {
    // common slider
    $('.common-slider').each(function () {
        var $this = $(this);
        var verticalSlide = $(this).attr('data-vertical-slider');

        if ($this.children().length > 1) {
          var selectorAppendDots = $this.parent().find('.activate-dots');
          var selectorAppendArrows = $this.parent().find('.activate-arrows');
          var selectorPrevArrow = `<span class="arrow-slider arrow-prev"><svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" class="icon-arrow-left"><polyline points="15 18 9 12 15 6"></polyline></svg></span>`;
          var selectorNextArrow = `<span class="arrow-slider arrow-next"><svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" class="icon-arrow-right"><polyline points="9 18 15 12 9 6"></polyline></svg></span>`;
          //var selectorPrevArrow = `<span class="arrow-slider arrow-prev"><svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#FEFEFE" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" class="icon-arrow-left"><polyline points="15 18 9 12 15 6"></polyline></svg></span>`;
          //var selectorNextArrow = `<span class="arrow-slider arrow-next"><svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#FEFEFE" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" class="icon-arrow-right"><polyline points="9 18 15 12 9 6"></polyline></svg></span>`;

          $($this).slick({
            infinite: false,
            speed: 500,
            cssEase: 'ease',
            swipeToSlide: true,        
            vertical: verticalSlide ? true : false,
            verticalSwiping: verticalSlide ? true : false,
            appendDots: selectorAppendDots,
            appendArrows: selectorAppendArrows,
            prevArrow: selectorPrevArrow,
            nextArrow: selectorNextArrow,
            responsive: [
                {
                    breakpoint: 768,
                    settings: {
                        vertical: false,
                        verticalSwiping: false,
                    }
                }
            ]
          });
        }
    });

    // slideshow
    $('.activate-slider').each(function () {
        var $this = $(this);
        if ($this.children().length > 1) {
            var selectorAppendDots = $this.parent().find('.activate-dots');
            var selectorAppendArrows = $this.parent().find('.activate-arrows');
            var selectorPrevArrow = `<span class="arrow-slider arrow-prev"><svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" class="icon-arrow-left"><polyline points="15 18 9 12 15 6"></polyline></svg></span>`;
            var selectorNextArrow = `<span class="arrow-slider arrow-next"><svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 24 24" fill="none" stroke="#000" stroke-width="0.5" stroke-linecap="round" stroke-linejoin="round" class="icon-arrow-right"><polyline points="9 18 15 12 9 6"></polyline></svg></span>`;

            function doAnimation() {
                $this.find('.slick-slide').each(function () {
                    $(this).find('[data-animation]').each(function () {
                        var dataAnimation = $(this).attr('data-animation');
                        $(this).removeClass(dataAnimation);
                        if ($(this).closest('.slick-slide').is('.slick-current.slick-active')) {
                            $(this).addClass(dataAnimation);
                        }
                    })
                })
                return false;
            }

            $(this).on('init', function (event, slick) {
                doAnimation();
            }).on('afterChange', function (event, slick, direction) {
                doAnimation();
            }).slick({
                appendDots: selectorAppendDots,
                appendArrows: selectorAppendArrows,
                prevArrow: selectorPrevArrow,
                nextArrow: selectorNextArrow
            });
        }
    })
}

function cerrarSesion () {
    $("#modalProcesando").modal("show");
    let formData = new FormData();
    formData.append('cerrar', true);
    $.ajax({
        type: "POST",
        url: DIR + "/Transaction/cierraSession",
        data: formData,
        dataType: 'JSON',
        contentType: false,
        processData: false,
        success: function(resp) {
            document.location.href = DIR;
        },
        error: function(resp){
            console.log(resp);
        },
        complete: function(){
            $("#modalProcesando").modal("hide");
        }
    });
}

function rpS(obj){
    var ObjElement = obj;
    var txt = ObjElement.value;
    if (txt !== null || txt !== "") {
        var rex = /(<([^>]+)>)/ig;
        txt = txt.replace(rex, "");
        txt = $('<textarea />').html(txt).text();
        txt = txt.replace("^", "");
        txt = txt.replace("~", "");
        txt = txt.replace("`", "");
        txt = txt.replace("", "");
        txt = txt.replace("+", "");
        txt = txt.replace("=", "");
        txt = txt.replace("{", "");
        txt = txt.replace("}", "");
        txt = txt.replace("[", "");
        txt = txt.replace("]", "");
        txt = txt.replace("|", "");
        txt = txt.replace("'", "");
        txt = txt.replace("\/", "");
        txt = txt.replace("*", "");
        txt = txt.replace("\\", "");
        txt = txt.replace(">", "");
        txt = txt.replace("<", "");
        txt = txt.replace("º", "");
        txt = txt.replace("ª", "");
        txt = txt.replace("!", "");
        txt = txt.replace("\"", "");
        txt = txt.replace("#", "");
        txt = txt.replace("$", "");
        txt = txt.replace("%", "");
        txt = txt.replace("&", "");
        txt = txt.replace("¬", "");
        txt = txt.replace("/", "");
        txt = txt.replace("(", "");
        txt = txt.replace(")", "");
        txt = txt.replace("?", "");
        txt = txt.replace("¿", "");
        txt = txt.replace("¡", "");
        txt = txt.replace("alert(", "");
        txt = txt.replace("href=", "");
        txt = txt.replace("src=", "");
        txt = txt.replace("javascript", "");
        txt = txt.replace("vbscript", "");
        txt = txt.replace("expression", "");
        txt = txt.replace("applet", "");
        txt = txt.replace("blink", "");
        txt = txt.replace("style", "");
        txt = txt.replace("embed", "");
        txt = txt.replace("object", "");
        txt = txt.replace("iframe", "");
        txt = txt.replace("frame", "");
        txt = txt.replace("frameset", "");
        txt = txt.replace("ilayer", "");
        txt = txt.replace("layer", "");
        txt = txt.replace("bgsound", "");
        txt = txt.replace("title", "");
        txt = txt.replace("onabort", "");
        txt = txt.replace("onactivate", "");
        txt = txt.replace("onafterprint", "");
        txt = txt.replace("onafterupdate", "");
        txt = txt.replace("onbeforeactivate", "");
        txt = txt.replace("onbeforecopy", "");
        txt = txt.replace("onbeforecut", "");
        txt = txt.replace("onbeforedeactivate", "");
        txt = txt.replace("onbeforeeditfocus", "");
        txt = txt.replace("onbeforepaste", "");
        txt = txt.replace("onbeforeprint", "");
        txt = txt.replace("onbeforeunload", "");
        txt = txt.replace("onbeforeupdate", "");
        txt = txt.replace("onblur", "");
        txt = txt.replace("onbounce", "");
        txt = txt.replace("oncellchange", "");
        txt = txt.replace("onchange", "");
        txt = txt.replace("onclick", "");
        txt = txt.replace("oncontextmenu", "");
        txt = txt.replace("oncontrolselect", "");
        txt = txt.replace("oncopy", "");
        txt = txt.replace("oncut", "");
        txt = txt.replace("ondataavailable", "");
        txt = txt.replace("ondatasetchanged", "");
        txt = txt.replace("ondatasetcomplete", "");
        txt = txt.replace("ondblclick", "");
        txt = txt.replace("ondeactivate", "");
        txt = txt.replace("ondrag", "");
        txt = txt.replace("ondragend", "");
        txt = txt.replace("ondragenter", "");
        txt = txt.replace("ondragleave", "");
        txt = txt.replace("ondragstart", "");
        txt = txt.replace("ondrop", "");
        txt = txt.replace("onerror", "");
        txt = txt.replace("onerrorupdate", "");
        txt = txt.replace("onfilterchange", "");
        txt = txt.replace("onfinish", "");
        txt = txt.replace("onfocus", "");
        txt = txt.replace("onfocusin", "");
        txt = txt.replace("onfocusout", "");
        txt = txt.replace("onhelp", "");
        txt = txt.replace("onkeydown", "");
        txt = txt.replace("ondragend", "");
        txt = txt.replace("onkeyup", "");
        txt = txt.replace("onkeypress", "");
        txt = txt.replace("onlayoutcomplete", "");
        txt = txt.replace("onload", "");
        txt = txt.replace("onlosecapture", "");
        txt = txt.replace("onmouseenter", "");
        txt = txt.replace("onmouseleave", "");
        txt = txt.replace("onmousemove", "");
        txt = txt.replace("onmouseout", "");
        txt = txt.replace("onmouseover", "");
        txt = txt.replace("onmouseup", "");
        txt = txt.replace("onmousewheel", "");
        txt = txt.replace("onmove", "");
        txt = txt.replace("onmoveend", "");
        txt = txt.replace("onmovestart", "");
        txt = txt.replace("onpaste", "");
        txt = txt.replace("onpropertychange", "");
        txt = txt.replace("onreadystatechange", "");
        txt = txt.replace("onreset", "");
        txt = txt.replace("onresize", "");
        txt = txt.replace("onresizeend", "");
        txt = txt.replace("onresizestart", "");
        txt = txt.replace("onrowenter", "");
        txt = txt.replace("onrowexit", "");
        txt = txt.replace("onrowsdelete", "");
        txt = txt.replace("onrowsinserted", "");
        txt = txt.replace("onscroll", "");
        txt = txt.replace("onselect", "");
        txt = txt.replace("onselectionchange", "");
        txt = txt.replace("onselectstart", "");
        txt = txt.replace("onstart", "");
        txt = txt.replace("onstop", "");
        txt = txt.replace("onsubmit", "");
        txt = txt.replace("onunload", "");
    }
    ObjElement.value = txt;
}

var dicInputsValidaciones = {
    numError: function (error) {
        switch (error) {
            case 1:
                return 'Campo requerido'
                break;
            case 2:
                return 'Se espera un valor numérico'
                break;
            case 3:
                return 'Se espera un valor decimal'
                break;
            case 4:
                return 'Número de caracteres excedido'
                break;
            case 5:
                return 'Formato de fecha incorrecto'
                break;
            case 6:
                return 'No se envío ningún campo'
                break;
            case 7:
                return 'Su contraseña debe ser mayor a 5 caracteres'
                break;
        }
    }
}

function inversaCaracteresEspeciales(texto) {
    texto = texto.replace(/&amp;/g, '&')
            .replace(/&#35;/g, '#')
            .replace(/&lt;/g, '<')
            .replace(/&gt;/g, '>')
            .replace(/&quot;/g, '"')
            .replace(/&#33;/g, '!')
            .replace(/&#36;/g, '$')
            .replace(/&#37;/g, '%')
            .replace(/&#39;/g, '\'')
            .replace(/&#40;/g, '(')
            .replace(/&#41;/g, ')')
            .replace(/&#42;/g, '*')
            .replace(/&#43;/g, '+')
            .replace(/&#44;/g, ',')
            .replace(/&#45;/g, '-')
            .replace(/&#46;/g, '.')
            .replace(/&#47;/g, '/')
            .replace(/&#58;/g, ':')
            .replace(/&#61;/g, '=')
            .replace(/&#63;/g, '?')
            .replace(/&#91;/g, '[')
            .replace(/&#93;/g, ']')
            .replace(/&#94;/g, '^')
            .replace(/&#95;/g, '_')
            .replace(/&#123;/g, '{')
            .replace(/&#124;/g, '|')
            .replace(/&#125;/g, '}')
            .replace(/&#126;/g, '~')
            .replace(/&iquest;/g, '¿')
            .replace(/&iexcl;/g, '¡')
            .replace(/(<([^>]+)>)/ig, "")

    return texto;
}

function quitaCaracteresEspeciales(texto) {
    texto = texto.replace(/(<([^>]+)>)/ig, "")
            .replace(/(&lt;([^>]+)&gt;)/ig, "")
            .replace(/(&#60;([^>]+)&#62;)/ig, "")
            .replace(/&/g, '&amp;')
            .replace(/#/g, '&#35;')
            .replace(/\\/g, '')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/\"/g, '&quot;')
            .replace(/!/g, '&#33;')
            .replace(/\$/g, '&#36;')
            .replace(/%/g, '&#37;')
            .replace(/'/g, '&#39;')
            .replace(/\(/g, '&#40;')
            .replace(/\)/g, '&#41;')
            .replace(/\*/g, '&#42;')
            .replace(/\+/g, '&#43;')
            .replace(/,/g, '&#44;')
            .replace(/-/g, '&#45;')
            .replace(/\./g, '&#46;')
            .replace(/\//g, '&#47;')
            .replace(/:/g, '&#58;')
            .replace(/=/g, '&#61;')
            .replace(/\?/g, '&#63;')
            .replace(/\[/g, '&#91;')
            .replace(/\[/g, '&#93;')
            .replace(/\^/g, '&#94;')
            .replace(/_/g, '&#95;')
            .replace(/{/g, '&#123;')
            .replace(/\|/g, '&#124;')
            .replace(/}/g, '&#125;')
            .replace(/~/g, '&#126;')
            .replace(/¿/g, '&iquest;')
            .replace(/¡/g, '&iexcl;')

    return texto;
}

function limpiaContrasena(texto) {
    texto = texto.replace(/(<([^>]+)>)/ig, "")
            .replace(/(&lt;([^>]+)&gt;)/ig, "")
            .replace(/(&#60;([^>]+)&#62;)/ig, "")
    return texto
}

function validarNumero(texto) {
    return new RegExp('^[0-9]+$').test(texto)
}

function nombreMes(texto, tipo) {
    if(tipo == 1){
        switch(texto){
            case 1:
                return "Ene";
                break;
            case 2:
                return "Feb";
                break;
            case 3:
                return "Mar";
                break;
            case 4:
                return "Abr";
                break;
            case 5:
                return "May";
                break;
            case 6:
                return "Jun";
                break;
            case 7:
                return "Jul";
                break;
            case 8:
                return "Ago";
                break;
            case 9:
                return "Sep";
                break;
            case 10:
                return "Oct";
                break;
            case 11:
                return "Nov";
                break;
            case 12:
                return "Dic";
                break;
            default:
                return "N/A";
                break;
        }
    }else{
        switch(texto){
            case 1:
                return "Enero";
                break;
            case 2:
                return "Febrero";
                break;
            case 3:
                return "Marzo";
                break;
            case 4:
                return "Abril";
                break;
            case 5:
                return "Mayo";
                break;
            case 6:
                return "Junio";
                break;
            case 7:
                return "Julio";
                break;
            case 8:
                return "Agosto";
                break;
            case 9:
                return "Septiembre";
                break;
            case 10:
                return "Octubre";
                break;
            case 11:
                return "Noviembre";
                break;
            case 12:
                return "Diciembre";
                break;
            default:
                return "N/A";
                break;
        }
    }
}

function validarDecimal(texto) {
    return new RegExp('^[0-9|,|.]+$').test(texto)
}

function validacionCampos(arrayCampos){
    var respuesta = new Object()
    respuesta.valid = true
    respuesta.form = ''
    if(arrayCampos.length > 0){
        for (var i = 0; i < arrayCampos.length; i++) {
            var idC = arrayCampos[i].id
            var valorC = arrayCampos[i].valor
            var requeridoC = arrayCampos[i].requerido
            var tipoC = arrayCampos[i].tipo
            
            if (tipoC !== 'file') {
                //var valorC = valorC.trim()
                var vacio = (valorC === '' || valorC === null || valorC.length == 0) ? true : false
                
                //Verifica que no sea vacio si el campo es requerido
                if (requeridoC && vacio) {
                    respuesta.id = idC
                    respuesta.error = 1
                    respuesta.valid = false
                    break
                }

                if (tipoC === 'texto') {
                    if(valorC.length > 15000) {
                        respuesta.id = idC
                        respuesta.error = 4
                        respuesta.valid = false
                        break
                    }
                }

                if (tipoC === 'contrasena') {
                    if (valorC.length < 5) {
                        respuesta.id = idC
                        respuesta.error = 7
                        respuesta.valid = false
                        break
                    }
                }

                if (tipoC === 'numero') {
                    if (valorC != '' && valorC != null && valorC.length > 0) {
                        if (valorC.length > 10) {
                            respuesta.id = idC
                            respuesta.error = 4
                            respuesta.valid = false
                            break
                        } else if (!validarNumero(valorC)) {
                            respuesta.id = idC
                            respuesta.error = 2
                            respuesta.valid = false
                            break
                        }
                    }
                }

                if (tipoC === 'decimal') {
                    if (valorC != '' && valorC != null && valorC.length > 0) {
                        if (valorC.length > 15) {
                            respuesta.id = idC
                            respuesta.error = 4
                            respuesta.valid = false
                            break
                        } else if (!validarDecimal(valorC)) {
                            respuesta.id = idC
                            respuesta.error = 3
                            respuesta.valid = false
                            break
                        }
                    }
                }
            }
        }
        if(respuesta.valid){
            var formData = new FormData()
            for (var i = 0; i < arrayCampos.length; i++){
                var idC = arrayCampos[i].id
                var valorC = arrayCampos[i].valor
                var requeridoC = arrayCampos[i].requerido
                var tipoC = arrayCampos[i].tipo

                //var valorC = valorC.trim()
                if (tipoC === 'texto' || tipoC === 'numero' || tipoC === 'decimal' || tipoC === 'contrasena'){
                    //formData.append(idC, encrypt(valorC, randomK))
                    formData.append(idC, btoa(valorC))
                } else
                    formData.append(idC, valorC)
            }
            respuesta.form = formData
        }
    }else{
        respuesta.error = 6
        respuesta.valid = false
    }
    return respuesta
}

function mayusFirst(str) {
  let firstL = str.charAt(0).toUpperCase();
  let res = str.slice(1);
  return firstL+res;
}

function loadingDiv (divShow) {
    $("#" + divShow).html('<center class="mt-5"><img src="' + DIR + '/public/assets/img/loading-25.gif" style="width:50px;" alt="img-cargando" /><br>Cargando</center>');
}

//GENERALES
const randomK = "F%^5nzD6FEK7m3w^S";
const shop_tcT = "PT";
const shop_tcA = "AP";
var protocol = window.location.protocol;
var hostname = window.location.hostname;
const DIR = protocol + "//" + hostname;